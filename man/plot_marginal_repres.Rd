% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neural_net_representative_values.R
\name{plot_marginal_repres}
\alias{plot_marginal_repres}
\title{Function for plotting the marginal effect at representative values
 of the created NeuralNetwork}
\usage{
plot_marginal_repres(neural_net, predictor, predictor_value, rep = 100,
  units = 1, kind = "mean", change_variables = NULL,
  change_values = NULL, class = NULL, probs = c(0, 0),
  plot_type = "ggplot", nrepetitions = 5)
}
\arguments{
\item{neural_net}{The NeuralNetwork instance, see:
\code{\link{NeuralNetwork}}}

\item{predictor}{Vector of predictors of the neural network for which to
plot the partial dependencies.}

\item{predictor_value}{Value of interest for marginal effect}

\item{rep}{Number of data points to be plotted for marginal effect}

\item{units}{units of change for marginal effect}

\item{kind}{Type of holding the other variables constant (mean, median)}

\item{change_variables}{Variable to be held constant}

\item{change_values}{Value to hold change_variable constant}

\item{class}{class for categorical variable}

\item{probs}{Vector of lower and upper bound probabilities for the confidence
interval. If booth are 0, intervals will not be plotted.}

\item{plot_type}{Either 'ggplot' if the plot should be created using ggplot or
'ggplotly' if plotly should be used.}

\item{nrepititions}{Integer representing the number of repititions used for
creating the bootstrap confidence interval.}
}
\value{
Created figure
}
\description{
\code{plot_marginal_repres} plots the MER for
  the specified predictors.
}
\examples{
\dontrun{
# Example: Numeric or Binary
library(MASS)
neural_network <- NeuralNetwork(f = "medv ~ .", data = Boston,
                                layers = c(5, 3), scale = TRUE,
                                linear.output = TRUE)
plot_marginal_repres(neural_network, predictor = "crim", predictor_value = 2,
probs = c(0.1,0.9), nrepetitions = 3, kind = "mean",
rep = 100, units = 1, change_values = NULL, change_variables = NULL)
plot_marginal_repres(neural_network, predictor = c("crim", "age"),
predictor_value = c(2, 35), change_values = 190, change_variables = "tax")
plot_marginal_repres(neural_network, "crim", 3, kind = "median",
probs = c(0.2, 0.8))

# Example: Categoric
library(datasets)
model <- NeuralNetwork(
   Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width,
   data = iris, layers = c(10, 10), rep = 5, err.fct = "ce",
   linear.output = FALSE, lifesign = "minimal", stepmax = 1000000,
   threshold = 0.001, scale = F)

plot_marginal_repres(model, predictor = "Petal.Length",
predictor_value = c(5,6,5), class = "Species")
plot_marginal_repres(model, predictor = c("Sepal.Length", "Petal.Length"),
predictor_value = c(1,2,3,4,5,6), class = "Species")
plot_marginal_repres(model,"Sepal.Width", c(2,3), class = "Species")
}

}
